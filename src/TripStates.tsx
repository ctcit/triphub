import { IState, Role } from "./Interfaces";

export const TripState: { [id: string]: IState } = {
    MyTrips: {
        id: 'MyTrips',
        groupTitle: 'My Trips',
        status: 'This one of trips you have signed up to or edited',
        nextStates: [],
        roleToChange: Role.Webmaster,
        roleToView: Role.Member,
    },
    Open: {
        id: 'Open',
        status: 'This trip is open - sign up!',
        label: 'Reason for being in draft',
        nextStates: [],
        roleToChange: Role.TripLeader,
        roleToView: Role.NonMember,
    },
    Closed: {
        id: 'Closed',
        status: 'This trip is closed - you can only sign up with the trip leaders permission',
        nextStates: [],
        roleToChange: Role.TripLeader,
        roleToView: Role.NonMember,
    },
    Pending: {
        id: 'Pending',
        status: 'This trip is waiting for approval, or for suggested improvements',
        button: 'Return to pending',
        icon: 'fa-paper-plane',
        prompt: 'Please describe why this trip is being returned to pending',
        label: 'Return to Pending reasoning',
        nextStates: ['Approved',/*'Rejected',*/'SuggestChanges','Draft'],
        roleToChange: Role.TripLeader,
        roleToView: Role.TripLeader,
        isRequiringApproval: true,
    },
    Approved: {
        id: 'Approved',
        status: 'This trip has been approved',
        button: 'Approve Trip',
        icon: 'fa-thumbs-up',
        prompt: 'Please enter any further encouragement or information you wish to pass on',
        label: 'Approval Text',
        nextStates: ['Pending'],
        roleToChange: Role.Admin,
        roleToView: Role.NonMember,
    },
    Rejected: {
        id: 'Rejected',
        status: 'This trip has been been rejected',
        button: 'Reject Trip',
        icon: 'fa-thumbs-down',
        prompt: 'Please give reasoning for rejecting the trip',
        label: 'Rejection Reasoning',
        nextStates: ['Approved','Resubmitted'],
        roleToChange: Role.Admin,
        roleToView: Role.TripLeader,
    },
    SuggestChanges: {
        id: 'SuggestChanges',
        status: 'This trip has suggested improvements that need actioning',
        groupTitle: 'Needing improvements before approval',
        button: 'Suggest Changes',
        icon: 'fa-thumbs-down',
        prompt: 'Please enter suggested changes for improving the trip',
        label: 'Suggest Changes',
        nextStates: ['Approved','Resubmitted'],
        roleToChange: Role.Admin,
        roleToView: Role.TripLeader,
    },
    Resubmitted: {
        id: 'Resubmitted',
        status: 'This trip has been resubmitted for approval',
        button: 'Resubmit for approval',
        icon: 'fa-paper-plane',
        prompt: 'Please describe what improvements have been made to the trip',
        label: 'Improvements made to the trip',
        nextStates: ['Approved',/*'Rejected',*/'SuggestChanges'],
        roleToChange: Role.TripLeader,
        roleToView: Role.TripLeader,
        isRequiringApproval: true,
    },
    Draft: {
        id: 'Draft',
        status: 'This trip is in Draft status',
        button: 'Set to draft',
        icon: 'fa-pencil-ruler',
        prompt: 'Please describe why the trip is being set to draft (optional)',
        label: 'Reason for being in draft',
        nextStates: ['Pending'],
        roleToChange: Role.TripLeader,
        roleToView: Role.Admin,
    },
    Deleted: {
        id: 'Deleted',
        status: 'This trip is Deleted',
        nextStates: [],
        roleToChange: Role.TripLeader,
        roleToView: Role.Admin,
    },
}

for (const state of Object.keys(TripState)) {
    TripState[state].id = state
}